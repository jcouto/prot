#!/usr/bin/env python

import os
import sys
import getopt
import lcg
import subprocess as sub
import numpy as np
import glob
import matplotlib
from matplotlib import pyplot as plt

matplotlib.rc('axes',edgecolor='w',labelcolor='w')
matplotlib.rc('ytick',color='w')
description='''
Uses MatplotLib to plot a trace from an h5 file.
'''
usage='{0}\n'.format(description)

default_options={'filename':[],
                 'downsample':2,
                 'kernel':[],
                 'stack':True}

def parse_options():
    opt = default_options.copy()
    try:
        opts,args = getopt.getopt(sys.argv[1:], 'hf:d:k',['help','no-stack'])
    except:
        print(usage)
        print(str(err))
        sys.exit(1)
    for o,a in opts:
        if o in ['help','-h','--help']:
            print usage
            sys.exit(1)
        if o in ['-f']:
            opt['filename'] = [b for b in a.split(',')]
        if o in ['-k']:
            opt['kernel'] = [b for b in a.split(',')]
        if o in ['-d']:
            opt['downsample'] = float(a)
        if o in ['--no-stack']:
            opt['stack'] = False
    return opt

def main():
    opts = parse_options()
    fig = plt.figure(facecolor='k')
    ax = []
    for f in opts['filename']:
        if os.path.exists(f):
            ent,info = lcg.loadH5Trace(f)
            time = np.linspace(0,info['tend'],len(ent[1]['data']))
            if len(ax) == 0:
                ax.append(fig.add_subplot(len(ent),1,1, axisbg='k'))
                for i in range(1,len(ent)):
                    ax.append(fig.add_subplot(len(ent),1,i+1, sharex=ax[0], axisbg='k'))
            for i,e in enumerate(ent):
                if opts['stack']:
                    ax[i].plot(time,e['data'],color=[0,1,0])
        else:
            print('File {0} not found!'.format(f))
    plt.show()

if __name__ in ['__main__']:
    main()
